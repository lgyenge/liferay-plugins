/**
 * Copyright (c) 2000-2013 Liferay, Inc. All rights reserved.
 *
 * This library is free software; you can redistribute it and/or modify it under
 * the terms of the GNU Lesser General Public License as published by the Free
 * Software Foundation; either version 2.1 of the License, or (at your option)
 * any later version.
 *
 * This library is distributed in the hope that it will be useful, but WITHOUT
 * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS
 * FOR A PARTICULAR PURPOSE. See the GNU Lesser General Public License for more
 * details.
 */

package dinet.orgsetup62.model.impl;

import com.liferay.portal.kernel.bean.AutoEscapeBeanHandler;
import com.liferay.portal.kernel.util.GetterUtil;
import com.liferay.portal.kernel.util.ProxyUtil;
import com.liferay.portal.kernel.util.StringBundler;
import com.liferay.portal.kernel.util.StringPool;
import com.liferay.portal.model.CacheModel;
import com.liferay.portal.model.impl.BaseModelImpl;
import com.liferay.portal.service.ServiceContext;

import com.liferay.portlet.expando.model.ExpandoBridge;
import com.liferay.portlet.expando.util.ExpandoBridgeFactoryUtil;

import dinet.orgsetup62.model.Org;
import dinet.orgsetup62.model.OrgModel;

import java.io.Serializable;

import java.sql.Types;

import java.util.HashMap;
import java.util.Map;

/**
 * The base model implementation for the Org service. Represents a row in the &quot;orgsetup_Org&quot; database table, with each column mapped to a property of this class.
 *
 * <p>
 * This implementation and its corresponding interface {@link dinet.orgsetup62.model.OrgModel} exist only as a container for the default property accessors generated by ServiceBuilder. Helper methods and all application logic should be put in {@link OrgImpl}.
 * </p>
 *
 * @author gyengelaszlo
 * @see OrgImpl
 * @see dinet.orgsetup62.model.Org
 * @see dinet.orgsetup62.model.OrgModel
 * @generated
 */
public class OrgModelImpl extends BaseModelImpl<Org> implements OrgModel {
	/*
	 * NOTE FOR DEVELOPERS:
	 *
	 * Never modify or reference this class directly. All methods that expect a org model instance should use the {@link dinet.orgsetup62.model.Org} interface instead.
	 */
	public static final String TABLE_NAME = "orgsetup_Org";
	public static final Object[][] TABLE_COLUMNS = {
			{ "orgID", Types.BIGINT },
			{ "origAzon", Types.BIGINT },
			{ "azon_r", Types.BIGINT },
			{ "subAzon_r", Types.BIGINT },
			{ "category_r", Types.VARCHAR },
			{ "orgname_r", Types.VARCHAR },
			{ "city", Types.VARCHAR },
			{ "address1", Types.VARCHAR },
			{ "postalCode", Types.VARCHAR },
			{ "webURL", Types.VARCHAR },
			{ "contact", Types.VARCHAR },
			{ "emailAddress", Types.VARCHAR },
			{ "description", Types.VARCHAR },
			{ "keywords", Types.VARCHAR },
			{ "imageURL", Types.VARCHAR }
		};
	public static final String TABLE_SQL_CREATE = "create table orgsetup_Org (orgID LONG not null primary key,origAzon LONG,azon_r LONG,subAzon_r LONG,category_r VARCHAR(75) null,orgname_r VARCHAR(75) null,city VARCHAR(75) null,address1 VARCHAR(75) null,postalCode VARCHAR(75) null,webURL VARCHAR(75) null,contact VARCHAR(75) null,emailAddress VARCHAR(75) null,description STRING null,keywords VARCHAR(2000) null,imageURL VARCHAR(512) null)";
	public static final String TABLE_SQL_DROP = "drop table orgsetup_Org";
	public static final String ORDER_BY_JPQL = " ORDER BY org.orgID ASC";
	public static final String ORDER_BY_SQL = " ORDER BY orgsetup_Org.orgID ASC";
	public static final String DATA_SOURCE = "liferayDataSource";
	public static final String SESSION_FACTORY = "liferaySessionFactory";
	public static final String TX_MANAGER = "liferayTransactionManager";
	public static final boolean ENTITY_CACHE_ENABLED = GetterUtil.getBoolean(com.liferay.util.service.ServiceProps.get(
				"value.object.entity.cache.enabled.dinet.orgsetup62.model.Org"),
			true);
	public static final boolean FINDER_CACHE_ENABLED = GetterUtil.getBoolean(com.liferay.util.service.ServiceProps.get(
				"value.object.finder.cache.enabled.dinet.orgsetup62.model.Org"),
			true);
	public static final boolean COLUMN_BITMASK_ENABLED = GetterUtil.getBoolean(com.liferay.util.service.ServiceProps.get(
				"value.object.column.bitmask.enabled.dinet.orgsetup62.model.Org"),
			true);
	public static long AZON_R_COLUMN_BITMASK = 1L;
	public static long SUBAZON_R_COLUMN_BITMASK = 2L;
	public static long ORGID_COLUMN_BITMASK = 4L;
	public static final long LOCK_EXPIRATION_TIME = GetterUtil.getLong(com.liferay.util.service.ServiceProps.get(
				"lock.expiration.time.dinet.orgsetup62.model.Org"));

	public OrgModelImpl() {
	}

	@Override
	public long getPrimaryKey() {
		return _orgID;
	}

	@Override
	public void setPrimaryKey(long primaryKey) {
		setOrgID(primaryKey);
	}

	@Override
	public Serializable getPrimaryKeyObj() {
		return _orgID;
	}

	@Override
	public void setPrimaryKeyObj(Serializable primaryKeyObj) {
		setPrimaryKey(((Long)primaryKeyObj).longValue());
	}

	@Override
	public Class<?> getModelClass() {
		return Org.class;
	}

	@Override
	public String getModelClassName() {
		return Org.class.getName();
	}

	@Override
	public Map<String, Object> getModelAttributes() {
		Map<String, Object> attributes = new HashMap<String, Object>();

		attributes.put("orgID", getOrgID());
		attributes.put("origAzon", getOrigAzon());
		attributes.put("azon_r", getAzon_r());
		attributes.put("subAzon_r", getSubAzon_r());
		attributes.put("category_r", getCategory_r());
		attributes.put("orgname_r", getOrgname_r());
		attributes.put("city", getCity());
		attributes.put("address1", getAddress1());
		attributes.put("postalCode", getPostalCode());
		attributes.put("webURL", getWebURL());
		attributes.put("contact", getContact());
		attributes.put("emailAddress", getEmailAddress());
		attributes.put("description", getDescription());
		attributes.put("keywords", getKeywords());
		attributes.put("imageURL", getImageURL());

		return attributes;
	}

	@Override
	public void setModelAttributes(Map<String, Object> attributes) {
		Long orgID = (Long)attributes.get("orgID");

		if (orgID != null) {
			setOrgID(orgID);
		}

		Long origAzon = (Long)attributes.get("origAzon");

		if (origAzon != null) {
			setOrigAzon(origAzon);
		}

		Long azon_r = (Long)attributes.get("azon_r");

		if (azon_r != null) {
			setAzon_r(azon_r);
		}

		Long subAzon_r = (Long)attributes.get("subAzon_r");

		if (subAzon_r != null) {
			setSubAzon_r(subAzon_r);
		}

		String category_r = (String)attributes.get("category_r");

		if (category_r != null) {
			setCategory_r(category_r);
		}

		String orgname_r = (String)attributes.get("orgname_r");

		if (orgname_r != null) {
			setOrgname_r(orgname_r);
		}

		String city = (String)attributes.get("city");

		if (city != null) {
			setCity(city);
		}

		String address1 = (String)attributes.get("address1");

		if (address1 != null) {
			setAddress1(address1);
		}

		String postalCode = (String)attributes.get("postalCode");

		if (postalCode != null) {
			setPostalCode(postalCode);
		}

		String webURL = (String)attributes.get("webURL");

		if (webURL != null) {
			setWebURL(webURL);
		}

		String contact = (String)attributes.get("contact");

		if (contact != null) {
			setContact(contact);
		}

		String emailAddress = (String)attributes.get("emailAddress");

		if (emailAddress != null) {
			setEmailAddress(emailAddress);
		}

		String description = (String)attributes.get("description");

		if (description != null) {
			setDescription(description);
		}

		String keywords = (String)attributes.get("keywords");

		if (keywords != null) {
			setKeywords(keywords);
		}

		String imageURL = (String)attributes.get("imageURL");

		if (imageURL != null) {
			setImageURL(imageURL);
		}
	}

	@Override
	public long getOrgID() {
		return _orgID;
	}

	@Override
	public void setOrgID(long orgID) {
		_orgID = orgID;
	}

	@Override
	public long getOrigAzon() {
		return _origAzon;
	}

	@Override
	public void setOrigAzon(long origAzon) {
		_origAzon = origAzon;
	}

	@Override
	public long getAzon_r() {
		return _azon_r;
	}

	@Override
	public void setAzon_r(long azon_r) {
		_columnBitmask |= AZON_R_COLUMN_BITMASK;

		if (!_setOriginalAzon_r) {
			_setOriginalAzon_r = true;

			_originalAzon_r = _azon_r;
		}

		_azon_r = azon_r;
	}

	public long getOriginalAzon_r() {
		return _originalAzon_r;
	}

	@Override
	public long getSubAzon_r() {
		return _subAzon_r;
	}

	@Override
	public void setSubAzon_r(long subAzon_r) {
		_columnBitmask |= SUBAZON_R_COLUMN_BITMASK;

		if (!_setOriginalSubAzon_r) {
			_setOriginalSubAzon_r = true;

			_originalSubAzon_r = _subAzon_r;
		}

		_subAzon_r = subAzon_r;
	}

	public long getOriginalSubAzon_r() {
		return _originalSubAzon_r;
	}

	@Override
	public String getCategory_r() {
		if (_category_r == null) {
			return StringPool.BLANK;
		}
		else {
			return _category_r;
		}
	}

	@Override
	public void setCategory_r(String category_r) {
		_category_r = category_r;
	}

	@Override
	public String getOrgname_r() {
		if (_orgname_r == null) {
			return StringPool.BLANK;
		}
		else {
			return _orgname_r;
		}
	}

	@Override
	public void setOrgname_r(String orgname_r) {
		_orgname_r = orgname_r;
	}

	@Override
	public String getCity() {
		if (_city == null) {
			return StringPool.BLANK;
		}
		else {
			return _city;
		}
	}

	@Override
	public void setCity(String city) {
		_city = city;
	}

	@Override
	public String getAddress1() {
		if (_address1 == null) {
			return StringPool.BLANK;
		}
		else {
			return _address1;
		}
	}

	@Override
	public void setAddress1(String address1) {
		_address1 = address1;
	}

	@Override
	public String getPostalCode() {
		if (_postalCode == null) {
			return StringPool.BLANK;
		}
		else {
			return _postalCode;
		}
	}

	@Override
	public void setPostalCode(String postalCode) {
		_postalCode = postalCode;
	}

	@Override
	public String getWebURL() {
		if (_webURL == null) {
			return StringPool.BLANK;
		}
		else {
			return _webURL;
		}
	}

	@Override
	public void setWebURL(String webURL) {
		_webURL = webURL;
	}

	@Override
	public String getContact() {
		if (_contact == null) {
			return StringPool.BLANK;
		}
		else {
			return _contact;
		}
	}

	@Override
	public void setContact(String contact) {
		_contact = contact;
	}

	@Override
	public String getEmailAddress() {
		if (_emailAddress == null) {
			return StringPool.BLANK;
		}
		else {
			return _emailAddress;
		}
	}

	@Override
	public void setEmailAddress(String emailAddress) {
		_emailAddress = emailAddress;
	}

	@Override
	public String getDescription() {
		if (_description == null) {
			return StringPool.BLANK;
		}
		else {
			return _description;
		}
	}

	@Override
	public void setDescription(String description) {
		_description = description;
	}

	@Override
	public String getKeywords() {
		if (_keywords == null) {
			return StringPool.BLANK;
		}
		else {
			return _keywords;
		}
	}

	@Override
	public void setKeywords(String keywords) {
		_keywords = keywords;
	}

	@Override
	public String getImageURL() {
		if (_imageURL == null) {
			return StringPool.BLANK;
		}
		else {
			return _imageURL;
		}
	}

	@Override
	public void setImageURL(String imageURL) {
		_imageURL = imageURL;
	}

	public long getColumnBitmask() {
		return _columnBitmask;
	}

	@Override
	public ExpandoBridge getExpandoBridge() {
		return ExpandoBridgeFactoryUtil.getExpandoBridge(0,
			Org.class.getName(), getPrimaryKey());
	}

	@Override
	public void setExpandoBridgeAttributes(ServiceContext serviceContext) {
		ExpandoBridge expandoBridge = getExpandoBridge();

		expandoBridge.setAttributes(serviceContext);
	}

	@Override
	public Org toEscapedModel() {
		if (_escapedModel == null) {
			_escapedModel = (Org)ProxyUtil.newProxyInstance(_classLoader,
					_escapedModelInterfaces, new AutoEscapeBeanHandler(this));
		}

		return _escapedModel;
	}

	@Override
	public Object clone() {
		OrgImpl orgImpl = new OrgImpl();

		orgImpl.setOrgID(getOrgID());
		orgImpl.setOrigAzon(getOrigAzon());
		orgImpl.setAzon_r(getAzon_r());
		orgImpl.setSubAzon_r(getSubAzon_r());
		orgImpl.setCategory_r(getCategory_r());
		orgImpl.setOrgname_r(getOrgname_r());
		orgImpl.setCity(getCity());
		orgImpl.setAddress1(getAddress1());
		orgImpl.setPostalCode(getPostalCode());
		orgImpl.setWebURL(getWebURL());
		orgImpl.setContact(getContact());
		orgImpl.setEmailAddress(getEmailAddress());
		orgImpl.setDescription(getDescription());
		orgImpl.setKeywords(getKeywords());
		orgImpl.setImageURL(getImageURL());

		orgImpl.resetOriginalValues();

		return orgImpl;
	}

	@Override
	public int compareTo(Org org) {
		long primaryKey = org.getPrimaryKey();

		if (getPrimaryKey() < primaryKey) {
			return -1;
		}
		else if (getPrimaryKey() > primaryKey) {
			return 1;
		}
		else {
			return 0;
		}
	}

	@Override
	public boolean equals(Object obj) {
		if (this == obj) {
			return true;
		}

		if (!(obj instanceof Org)) {
			return false;
		}

		Org org = (Org)obj;

		long primaryKey = org.getPrimaryKey();

		if (getPrimaryKey() == primaryKey) {
			return true;
		}
		else {
			return false;
		}
	}

	@Override
	public int hashCode() {
		return (int)getPrimaryKey();
	}

	@Override
	public void resetOriginalValues() {
		OrgModelImpl orgModelImpl = this;

		orgModelImpl._originalAzon_r = orgModelImpl._azon_r;

		orgModelImpl._setOriginalAzon_r = false;

		orgModelImpl._originalSubAzon_r = orgModelImpl._subAzon_r;

		orgModelImpl._setOriginalSubAzon_r = false;

		orgModelImpl._columnBitmask = 0;
	}

	@Override
	public CacheModel<Org> toCacheModel() {
		OrgCacheModel orgCacheModel = new OrgCacheModel();

		orgCacheModel.orgID = getOrgID();

		orgCacheModel.origAzon = getOrigAzon();

		orgCacheModel.azon_r = getAzon_r();

		orgCacheModel.subAzon_r = getSubAzon_r();

		orgCacheModel.category_r = getCategory_r();

		String category_r = orgCacheModel.category_r;

		if ((category_r != null) && (category_r.length() == 0)) {
			orgCacheModel.category_r = null;
		}

		orgCacheModel.orgname_r = getOrgname_r();

		String orgname_r = orgCacheModel.orgname_r;

		if ((orgname_r != null) && (orgname_r.length() == 0)) {
			orgCacheModel.orgname_r = null;
		}

		orgCacheModel.city = getCity();

		String city = orgCacheModel.city;

		if ((city != null) && (city.length() == 0)) {
			orgCacheModel.city = null;
		}

		orgCacheModel.address1 = getAddress1();

		String address1 = orgCacheModel.address1;

		if ((address1 != null) && (address1.length() == 0)) {
			orgCacheModel.address1 = null;
		}

		orgCacheModel.postalCode = getPostalCode();

		String postalCode = orgCacheModel.postalCode;

		if ((postalCode != null) && (postalCode.length() == 0)) {
			orgCacheModel.postalCode = null;
		}

		orgCacheModel.webURL = getWebURL();

		String webURL = orgCacheModel.webURL;

		if ((webURL != null) && (webURL.length() == 0)) {
			orgCacheModel.webURL = null;
		}

		orgCacheModel.contact = getContact();

		String contact = orgCacheModel.contact;

		if ((contact != null) && (contact.length() == 0)) {
			orgCacheModel.contact = null;
		}

		orgCacheModel.emailAddress = getEmailAddress();

		String emailAddress = orgCacheModel.emailAddress;

		if ((emailAddress != null) && (emailAddress.length() == 0)) {
			orgCacheModel.emailAddress = null;
		}

		orgCacheModel.description = getDescription();

		String description = orgCacheModel.description;

		if ((description != null) && (description.length() == 0)) {
			orgCacheModel.description = null;
		}

		orgCacheModel.keywords = getKeywords();

		String keywords = orgCacheModel.keywords;

		if ((keywords != null) && (keywords.length() == 0)) {
			orgCacheModel.keywords = null;
		}

		orgCacheModel.imageURL = getImageURL();

		String imageURL = orgCacheModel.imageURL;

		if ((imageURL != null) && (imageURL.length() == 0)) {
			orgCacheModel.imageURL = null;
		}

		return orgCacheModel;
	}

	@Override
	public String toString() {
		StringBundler sb = new StringBundler(31);

		sb.append("{orgID=");
		sb.append(getOrgID());
		sb.append(", origAzon=");
		sb.append(getOrigAzon());
		sb.append(", azon_r=");
		sb.append(getAzon_r());
		sb.append(", subAzon_r=");
		sb.append(getSubAzon_r());
		sb.append(", category_r=");
		sb.append(getCategory_r());
		sb.append(", orgname_r=");
		sb.append(getOrgname_r());
		sb.append(", city=");
		sb.append(getCity());
		sb.append(", address1=");
		sb.append(getAddress1());
		sb.append(", postalCode=");
		sb.append(getPostalCode());
		sb.append(", webURL=");
		sb.append(getWebURL());
		sb.append(", contact=");
		sb.append(getContact());
		sb.append(", emailAddress=");
		sb.append(getEmailAddress());
		sb.append(", description=");
		sb.append(getDescription());
		sb.append(", keywords=");
		sb.append(getKeywords());
		sb.append(", imageURL=");
		sb.append(getImageURL());
		sb.append("}");

		return sb.toString();
	}

	@Override
	public String toXmlString() {
		StringBundler sb = new StringBundler(49);

		sb.append("<model><model-name>");
		sb.append("dinet.orgsetup62.model.Org");
		sb.append("</model-name>");

		sb.append(
			"<column><column-name>orgID</column-name><column-value><![CDATA[");
		sb.append(getOrgID());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>origAzon</column-name><column-value><![CDATA[");
		sb.append(getOrigAzon());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>azon_r</column-name><column-value><![CDATA[");
		sb.append(getAzon_r());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>subAzon_r</column-name><column-value><![CDATA[");
		sb.append(getSubAzon_r());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>category_r</column-name><column-value><![CDATA[");
		sb.append(getCategory_r());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>orgname_r</column-name><column-value><![CDATA[");
		sb.append(getOrgname_r());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>city</column-name><column-value><![CDATA[");
		sb.append(getCity());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>address1</column-name><column-value><![CDATA[");
		sb.append(getAddress1());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>postalCode</column-name><column-value><![CDATA[");
		sb.append(getPostalCode());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>webURL</column-name><column-value><![CDATA[");
		sb.append(getWebURL());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>contact</column-name><column-value><![CDATA[");
		sb.append(getContact());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>emailAddress</column-name><column-value><![CDATA[");
		sb.append(getEmailAddress());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>description</column-name><column-value><![CDATA[");
		sb.append(getDescription());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>keywords</column-name><column-value><![CDATA[");
		sb.append(getKeywords());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>imageURL</column-name><column-value><![CDATA[");
		sb.append(getImageURL());
		sb.append("]]></column-value></column>");

		sb.append("</model>");

		return sb.toString();
	}

	private static ClassLoader _classLoader = Org.class.getClassLoader();
	private static Class<?>[] _escapedModelInterfaces = new Class[] { Org.class };
	private long _orgID;
	private long _origAzon;
	private long _azon_r;
	private long _originalAzon_r;
	private boolean _setOriginalAzon_r;
	private long _subAzon_r;
	private long _originalSubAzon_r;
	private boolean _setOriginalSubAzon_r;
	private String _category_r;
	private String _orgname_r;
	private String _city;
	private String _address1;
	private String _postalCode;
	private String _webURL;
	private String _contact;
	private String _emailAddress;
	private String _description;
	private String _keywords;
	private String _imageURL;
	private long _columnBitmask;
	private Org _escapedModel;
}